name: CI targets

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release: 
    types: [ published ]

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and package
      run: |
        pip install --upgrade pip setuptools wheel
        pip install pytest flake8
        pip install -e .
    - name: Display installed packages
      run: |
        python -m pip list
    - name: Run lint
      run:  flake8 .
    - name: Test with pytest
      run: pytest -v tests

  build:
    needs: [tests]
    name: Build source distribution
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Build
      run: |
        pip install --upgrade pip setuptools wheel
        python setup.py sdist
    - name: Test the sdist
      run: |
        python -m pip install --upgrade pip setuptools wheel pytest
        pip install dist/*.tar.gz
        python -c "import petra; print(petra.__version__)"
        pytest -v tests
    - uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/*

  deploy:
    needs: [tests, build]
    runs-on: ubuntu-latest
    environment: deploy
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    if: github.event_name == 'release'
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Download wheel/dist from build
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist
    - name: Build and publish
      uses: pypa/gh-action-pypi-publish@release/v1
